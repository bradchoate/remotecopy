#!/usr/bin/perl

use strict;
use warnings;

use IO::Socket;
use Getopt::Long;

my $proto_version = 1;

Getopt::Long::Configure("no_auto_abbrev");

my %options;
my $opts_ok = GetOptions( \%options, 'help|?|h', 'man', 'secret|s=s', );

$options{secret} ||= '';

my $sock = IO::Socket::INET->new(
    Proto     => 'tcp',
    PeerAddr  => '127.0.0.1',
    PeerPort  => 12345,
    ReuseAddr => 1,
) or die "Unable to connect: $!.\n";

my $data;
if ( scalar(@ARGV) ) {
    $data = join( ' ', @ARGV );
}
else {
    local $/ = undef;
    $data = <STDIN>;
}

read_hello($sock);
send_copy_data( $sock, $data );

$sock->close();

sub read_hello {
    my $sock = shift;

    my $line = <$sock>;
}

sub send_copy_data {
    my ( $sock, $data ) = @_;

    # send authentication
    printf $sock "%d:%s", $proto_version, $options{secret};

    my $line = <$sock>;
    if ( $line =~ /SUCCESS/ ) {

        # auth successful, send copy data
        print $sock $data;
    }
    elsif ( $line =~ /FAILURE AUTH/ ) {
        print "Authentication failure.  Use -s to pass in secret.\n";
        exit 1;
    }
}
